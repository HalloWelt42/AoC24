FROM php:8.1-apache

# Set Apache Document Root
ENV APACHE_DOCUMENT_ROOT=/var/www/html/public
RUN sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf \
    && sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf

# Installiere erforderliche Pakete
RUN apt-get update && apt-get install -y \
    openssl \
    libicu-dev \
    libzip-dev \
    zip \
    libjpeg-dev \
    libpng-dev \
    libfreetype6-dev \
    git \
    autoconf \
    gcc \
    make \
    curl \
    unzip \
    && rm -rf /var/lib/apt/lists/*

# Apache SSL-Modul und Konfiguration
RUN a2enmod ssl \
    && openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
        -keyout /etc/ssl/private/localhost.key \
        -out /etc/ssl/certs/localhost.crt \
        -subj "/C=US/ST=Denial/L=Springfield/O=Dis/CN=localhost"

# Kopiere Apache SSL-Konfiguration
COPY ./apache_ssl_local.conf /etc/apache2/sites-available/default-ssl.conf
RUN a2ensite default-ssl

# PHP INI-Files
COPY ./opcache.ini "$PHP_INI_DIR/conf.d/docker-php-ext-opcache.ini"
COPY ./xdebug.ini "$PHP_INI_DIR/conf.d/99-xdebug.ini"
RUN mv "$PHP_INI_DIR/php.ini-development" "$PHP_INI_DIR/php.ini"

# PHP Extensions: intl, gd, pdo_mysql, zip
RUN docker-php-ext-configure intl \
    && docker-php-ext-configure gd --with-jpeg --with-freetype \
    && docker-php-ext-install intl opcache pdo_mysql zip gd

# Xdebug installieren
RUN pecl install xdebug \
    && docker-php-ext-enable xdebug

# APCu installieren und konfigurieren
RUN pecl install apcu \
    && docker-php-ext-enable apcu \
    && echo "extension=apcu.so" > "$PHP_INI_DIR/conf.d/docker-php-ext-apcu.ini" \
    && echo "apc.enable_cli=1" >> "$PHP_INI_DIR/conf.d/docker-php-ext-apcu.ini" \
    && echo "apc.enable=1" >> "$PHP_INI_DIR/conf.d/docker-php-ext-apcu.ini"

# Composer installieren
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Symfony CLI installieren
RUN curl -sS https://get.symfony.com/cli/installer | bash \
    && mv /root/.symfony*/bin/symfony /usr/local/bin/symfony

# NVM installieren (Node.js Manager)
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash

# Apache Rewrite Modul aktivieren
RUN a2enmod rewrite
